name: Combined CI Workflow
on: [push, pull_request]

jobs:
  # ESLint Job
  eslint:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules

      - name: Install Node.js dependencies
        run: npm install

      - name: Create reports directory
        run: mkdir -p reports

      - name: Install ESLint SARIF Formatter
        run: npm install @microsoft/eslint-formatter-sarif --save-dev

      - name: Run ESLint with SARIF output
        run: npx eslint . --format @microsoft/eslint-formatter-sarif --output-file reports/eslint-results.sarif || true

      - name: Debug ESLint Output
        run: cat reports/eslint-results.sarif || echo "No SARIF report generated"

      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/eslint-results.sarif

  # OWASP Dependency Check Job
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "MyWebApp"
          path: "."
          format: "HTML"
          out: "dependency-check-report"

      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: Dependency-Check-Report
          path: dependency-check-report

  # Selenium Tests Job
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules

      - name: Install Node.js dependencies
        run: npm install

      - name: Prepare artifacts
        run: |
          tar -czvf www-build.tar.gz ./package.json ./server.js ./views ./test ./public
          ls -l

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: www-build
          path: www-build.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: node:20
      ports:
        - 3000:3000
      options: --network-alias=testserver

    env:
      TEST_BASE_URL: http://testserver:3000
      SELENIUM_HOST: http://selenium:4444/wd/hub

    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
          - 4444:4444

    steps:
      - name: Download built files
        uses: actions/download-artifact@v4
        with:
          name: www-build

      - name: Extract artifacts
        run: |
          tar -xzvf www-build.tar.gz
          ls -l

      - name: Install dependencies
        run: npm install

      - name: List node_modules
        run: ls -l node_modules

      - name: List files for debugging
        run: |
          echo "Current directory:"
          pwd
          echo "Files in the current directory:"
          ls -ltra .
          echo "Files in the tests directory:"
          ls -ltra test/

      - name: Start Node.js server
        run: |
          nohup node server.js &  # Start the server in the background
          sleep 5  # Give the server some time to start

      - name: Verify server is running
        run: |
          curl -f http://localhost:3000 || { echo "Server failed to start"; exit 1; }

      - name: Wait for Selenium server to be up
        run: |
          for i in {1..10}; do
            curl -s $SELENIUM_HOST && break || sleep 3
          done

      - name: Run Selenium tests
        run: node test/selenium-test.mjs github
